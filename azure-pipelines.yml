# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master
      - 20????
pr:
  branches:
    include:
      - master
      - 20????
schedules:
- cron: "0 0 * * 0"
  displayName: Weekly Sunday build
  branches:
    include:
      - master
      - 20????
  always: true

variables:
  DIFF_COVER_CHECK_THRESHOLD: 70
  DIFF_COVER_ENABLE: 'true'
  DIFF_COVER_WORKING_DIRECTORY: $(System.DefaultWorkingDirectory)

pool:
  vmImage: 'ubuntu-20.04'

container:
  image: sonicdev-microsoft.azurecr.io:443/sonic-slave-buster:latest

steps:
- script: |
    if [[ "$(Build.Reason)" == "PullRequest" ]];then
      echo "##vso[task.setvariable variable=sourceBranch]$(System.PullRequest.TargetBranch)"
    else
      echo "##vso[task.setvariable variable=sourceBranch]$(Build.SourceBranchName)"
    fi
  displayName: "Get correct artifact downloading branch"
- task: DownloadPipelineArtifact@2
  inputs:
    source: specific
    project: build
    pipeline: 142
    artifact: sonic-buildimage.vs
    runVersion: 'latestFromBranch'
    runBranch: 'refs/heads/$(sourceBranch)'
    patterns: |
      target/debs/**/libnl-3-200_*.deb
      target/debs/**/libnl-genl-3-200_*.deb
      target/debs/**/libnl-route-3-200_*.deb
      target/debs/**/libnl-nf-3-200_*.deb
      target/debs/**/libhiredis0.14_*.deb
      target/debs/**/libswsscommon_1.0.0_amd64.deb
      target/debs/**/python3-swsscommon_1.0.0_amd64.deb
      target/python-wheels/**/swsssdk-2.0.1-py3-none-any.whl
  displayName: "Download artifacts from latest sonic-buildimage build"

- script: |
    set -xe
    sudo apt-get -y purge libhiredis-dev libnl-3-dev libnl-route-3-dev
    sudo dpkg -i $(find . -name "*.deb")
  workingDirectory: $(Pipeline.Workspace)/target/
  displayName: 'Install Debian dependencies'

- script: |
    set -xe
    sudo pip3 install $(find . -name "swsssdk-2.0.1-py3-none-any.whl")
  workingDirectory: $(Pipeline.Workspace)/target/
  displayName: 'Install Python dependencies'

- script: |
    set -ex
    # Install .NET CORE
    curl -sSL https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
    sudo apt-add-repository https://packages.microsoft.com/debian/10/prod
    sudo apt-get update
    sudo apt-get install -y dotnet-sdk-5.0
  displayName: "Install .NET CORE"


# Python 3
- script: |
    python3 setup.py test
  displayName: 'Test Python 3'

- task: PublishTestResults@1
  inputs:
    testResultsFiles: '$(System.DefaultWorkingDirectory)/test-results.xml'
    testRunTitle: Python 3
    failTaskOnFailedTests: true
  condition: succeededOrFailed()
  displayName: 'Publish Python 3 test results'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/htmlcov/'
  displayName: 'Publish Python 3 test coverage'

- script: |
    set -e
    python3 setup.py bdist_wheel
  displayName: 'Build Python 3 wheel'

- publish: '$(System.DefaultWorkingDirectory)/dist/'
  artifact: wheels
  displayName: "Publish Python wheels"
